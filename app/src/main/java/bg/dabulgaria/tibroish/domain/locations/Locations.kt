/**
* Ti Broish API
* Ti Broish API is built for clients sending in election results data in Bulgaria
*
* OpenAPI spec version: 0.1
* Contact: team@dabulgaria.bg
*
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen.git
* Do not edit the class manually.
*/
package bg.dabulgaria.tibroish.domain.locations

import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.Index
import java.io.Serializable

@Entity( tableName = "Country",
        indices = [Index( name = "IX_Country_Code", value =["Code"] , unique = false)])
class Country (
        @ColumnInfo(name = "id")
        var id:Long=0,
        @ColumnInfo(name = "Code")
        val code: String,
        val name: String,
        val isAbroad: Boolean,
):Serializable

@Entity( tableName = "ElectionRegion",
        indices = [Index( name = "IX_ElectionRegion_Code", value =["Code"] , unique = false),
            Index( name = "IX_ElectionRegion_CountryCode", value =["CountryCode"] , unique = false)])
class ElectionRegion (
        @ColumnInfo(name = "id")
        var id:Long=0,
        @ColumnInfo(name = "CountryCode")
        val countryCode: String?,
        @ColumnInfo(name = "Code")
        val code: String,
        val name: String,
        val isAbroad: Boolean
) :Serializable

@Entity( tableName = "Municipality",
        indices = [Index(name = "IX_Municipality_Code", value = ["Code"], unique = false),
            Index(name = "IX_Municipality_CountryCode", value = ["ElectionRegionCode"], unique = false)])
class Municipality (
        @ColumnInfo(name = "id")
        var id:Long=0,
        @ColumnInfo(name = "Code")
        val code: String,
        @ColumnInfo(name = "ElectionRegionCode")
        val electionRegionCode:String?,
        val name: String
) :Serializable

@Entity( tableName = "Town",
        indices = [Index(name = "IX_Municipality_Code", value = ["Code"], unique = false),
            Index( name = "IX_Town_MunicipalityCode", value =["MunicipalityCode"] , unique = false)])
data class Town (
        @ColumnInfo(name = "id")
        var id:Long=0,
        val serverid: Long,
        @ColumnInfo(name = "Code")
        val code: Long,
        @ColumnInfo(name = "MunicipalityCode")
        val municipalityCode:String?,
        val name: String,
): Serializable

@Entity( tableName = "CityRegion",
        indices = [Index(name = "IX_Municipality_Code", value = ["Code"], unique = false),
            Index( name = "IX_CityRegion_TownCode", value =["TownCode"] , unique = false)])
data class CityRegion (

        @ColumnInfo(name = "id")
        var id:Long=0,
        @ColumnInfo(name = "Code")
        val code: String,
        @ColumnInfo(name = "TownCode")
        val townCode:Long?,
        val name: String
) :Serializable

@Entity( tableName = "Section",
        indices = [Index(name = "IX_Municipality_Code", value = ["Code"], unique = false),
            Index( name = "IX_Section_TownCode", value =["TownCode"] , unique = false),
            Index( name = "IX_Section_CityRegionCode", value =["CityRegionCode"] , unique = false)])
data class Section (
        @ColumnInfo(name = "id")
        var id:Long=0,
        val serverid: String,
        @ColumnInfo(name = "Code")
        val code: String,
        val place: String,
        val name:String,
        @ColumnInfo(name = "TownCode")
        val townCode: Long,
        @ColumnInfo(name = "CityRegionCode")
        val cityRegionCode: Long
) :Serializable